package Criptimix;

import java.awt.Color;
import java.awt.Dimension;


import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JToolBar;
import javax.swing.SwingConstants;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author WAX
 */
public class criptix extends javax.swing.JFrame {

    /**
     * Creates new form wireCount
     */
        File archivo;
    File archivoAbierto;
    FileInputStream entrada;
    FileOutputStream salida;
    public criptix() {
        initComponents();
        componentesIniciales();
    }
int desp=1, opcionSeleccionada=1;
String clave="";
String textoPlano="";
static String codificacion="César";

void componentesIniciales(){
   MenuGrupo.add(CifradoCesar);
   MenuGrupo.add(vigenere);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu8 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu10 = new javax.swing.JMenu();
        jMenu11 = new javax.swing.JMenu();
        jMenuBar5 = new javax.swing.JMenuBar();
        jMenu12 = new javax.swing.JMenu();
        jMenu13 = new javax.swing.JMenu();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jFrame4 = new javax.swing.JFrame();
        MenuGrupo = new javax.swing.ButtonGroup();
        jToolBar2 = new javax.swing.JToolBar();
        BotonNuevo = new javax.swing.JButton();
        BotonAbrir = new javax.swing.JButton();
        BotonGuardar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMPrincipal = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        JMenu = new javax.swing.JMenuItem();
        jMenuClasico = new javax.swing.JMenu();
        CifradoCesar = new javax.swing.JRadioButtonMenuItem();
        vigenere = new javax.swing.JRadioButtonMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenu3.setText("jMenu3");

        jMenu4.setText("File");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("Edit");
        jMenuBar2.add(jMenu5);

        jMenuItem2.setText("jMenuItem2");

        jMenu6.setText("File");
        jMenuBar3.add(jMenu6);

        jMenu7.setText("Edit");
        jMenuBar3.add(jMenu7);

        jMenu8.setText("File");
        jMenuBar4.add(jMenu8);

        jMenu9.setText("Edit");
        jMenuBar4.add(jMenu9);

        jMenuItem3.setText("jMenuItem3");

        jMenu10.setText("jMenu10");

        jMenu11.setText("jMenu11");

        jMenu12.setText("File");
        jMenuBar5.add(jMenu12);

        jMenu13.setText("Edit");
        jMenuBar5.add(jMenu13);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame4Layout = new javax.swing.GroupLayout(jFrame4.getContentPane());
        jFrame4.getContentPane().setLayout(jFrame4Layout);
        jFrame4Layout.setHorizontalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame4Layout.setVerticalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Criptix");

        jToolBar2.setRollover(true);
        jToolBar2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        BotonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nuevo.png"))); // NOI18N
        BotonNuevo.setFocusable(false);
        BotonNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonNuevoActionPerformed(evt);
            }
        });
        jToolBar2.add(BotonNuevo);

        BotonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Folder.png"))); // NOI18N
        BotonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAbrirActionPerformed(evt);
            }
        });
        jToolBar2.add(BotonAbrir);

        BotonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/disco.png"))); // NOI18N
        jToolBar2.add(BotonGuardar);

        jMenuBar1.setName("Cablix"); // NOI18N

        jMPrincipal.setText("Archivo");

        jMenuItem1.setText("Nuevo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMPrincipal.add(jMenuItem1);

        JMenu.setText("Abrir");
        JMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMenuActionPerformed(evt);
            }
        });
        jMPrincipal.add(JMenu);

        jMenuBar1.add(jMPrincipal);

        jMenuClasico.setText("Clásico");

        CifradoCesar.setSelected(true);
        CifradoCesar.setText("César");
        CifradoCesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CifradoCesarActionPerformed(evt);
            }
        });
        jMenuClasico.add(CifradoCesar);

        vigenere.setSelected(true);
        vigenere.setText("Vigenère");
        vigenere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vigenereActionPerformed(evt);
            }
        });
        jMenuClasico.add(vigenere);
        jMenuClasico.add(jSeparator1);

        jMenuBar1.add(jMenuClasico);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 168, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(528, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMenuActionPerformed
        ElegirArchivo();
    }//GEN-LAST:event_JMenuActionPerformed

    private void BotonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAbrirActionPerformed
        ElegirArchivo();
    }//GEN-LAST:event_BotonAbrirActionPerformed

    private void BotonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonNuevoActionPerformed
        nuevoDocumento();
    }//GEN-LAST:event_BotonNuevoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        nuevoDocumento();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void CifradoCesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CifradoCesarActionPerformed
       int ancho=25;
       opcionSeleccionada=1;
        codificacion="César";
        JFrame frame=new JFrame();
       JPanel panel=new JPanel();
       JLabel desfase=new JLabel("Desplazamiento:",SwingConstants.CENTER);
       JTextField texto = new JTextField("");
       JButton aceptar= new JButton("Aceptar");
       
       //frame.setDefaultCloseOperation(JPanel.DISPOSE_ON_CLOSE);
       frame.setVisible(true);
       frame.getContentPane().add(panel);
       panel.setBackground(Color.red);
       panel.setLayout(null);
       frame.setBounds(150,150,400,100);
       frame.setTitle("Configuración");
       desfase.setBounds(15, 15, 70, ancho);
       texto.setBounds(110, 15, 100, ancho);
       texto.setText(String.valueOf(desp));
       desfase.setBounds(5, 15, 110, ancho);
       aceptar.setBounds(250,15,100,ancho);
       aceptar.setMnemonic('a');

       panel.add(desfase);
       panel.add(texto);
       panel.add(aceptar);
      aceptar.addActionListener(new java.awt.event.ActionListener(){
        @Override
     public void actionPerformed(java.awt.event.ActionEvent evt) {
               desp= Integer.valueOf(texto.getText());
               frame.dispose();
            }   
    });
      // frame.add(desfase);
      // frame.add(texto);

    }//GEN-LAST:event_CifradoCesarActionPerformed

    private void vigenereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vigenereActionPerformed
           int ancho=25;
           opcionSeleccionada=2;
           codificacion="Vigenère";
        JFrame frame=new JFrame();
       JPanel panel=new JPanel();
       JLabel desfase=new JLabel("Clave:",SwingConstants.CENTER);
       JTextField texto = new JTextField("Hola");
       JButton aceptar= new JButton("Aceptar");
       
       //frame.setDefaultCloseOperation(JPanel.DISPOSE_ON_CLOSE);
       frame.setVisible(true); 
       frame.getContentPane().add(panel);
       panel.setLayout(null);
       frame.setBounds(150,150,400,100);
       frame.setTitle("Configuración");
       desfase.setBounds(15, 15, 70, ancho);
       texto.setBounds(110, 15, 100, ancho);
       desfase.setBounds(5, 15, 110, ancho);
       aceptar.setBounds(250,15,100,ancho);
       aceptar.setMnemonic('a');

       panel.add(desfase);
       panel.add(texto);
       panel.add(aceptar);
      aceptar.addActionListener(new java.awt.event.ActionListener(){
        @Override
     public void actionPerformed(java.awt.event.ActionEvent evt) {
               clave= texto.getText();
               frame.dispose();
            }   
    });
    }//GEN-LAST:event_vigenereActionPerformed
    
 public static String cifradoCesar(String texto, int codigo) {
        StringBuilder cifrado = new StringBuilder();
        codigo = codigo % 26;
        for (int i = 0; i < texto.length(); i++) {
            if (texto.charAt(i) >= 'a' && texto.charAt(i) <= 'z') {
                if ((texto.charAt(i) + codigo) > 'z') {
                    cifrado.append((char) (texto.charAt(i) + codigo - 26));
                } else {
                    cifrado.append((char) (texto.charAt(i) + codigo));
                }
            } else if (texto.charAt(i) >= 'A' && texto.charAt(i) <= 'Z') {
                if ((texto.charAt(i) + codigo) > 'Z') {
                    cifrado.append((char) (texto.charAt(i) + codigo - 26));
                } else {
                    cifrado.append((char) (texto.charAt(i) + codigo));
                }
            }
        }
        return cifrado.toString();
    }
 
private char[] alfa = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};      
    private char[] getCadena(String cadena){
        /*Obtiene una cadena y le quita espacios y   *
         *cambia a mayusculas todas las letras y     *
         *cada letra la pone en un arreglo tipo char**/
        String cade=cadena.toUpperCase().replaceAll(" ", "") ;
        char [] chain=new char [cade.length()];
        chain=cade.toCharArray();
        return chain;
    }
    private int[] cadenaToNum(char []chain){
        int [] ctn = new int [chain.length];
        int x=0,y=0,z=0;
        for(x=0;x<chain.length;x++){
            for(y=0;y<alfa.length;y++){
                if (alfa[y] == chain[z]){
                   ctn[z]=y;
                   z++;
                   break;
                }
            }
        }
        return ctn;
    }
    private String getTexto(){
        return textoPlano;
    }
    private String getClave(){
        return clave;
    }
    private char[] numToCadena(int[] cade){
        char [] ntc = new char [cade.length];
        int x=0,y=0,z=0;
        for(x=0;x<cade.length;x++){
            ntc[x]=alfa[cade[x]];
        }
        return ntc;
    }
    private String mostrarTexto(char[] a) {
        int x=0;
        String resultado="";
        for(x=0;x<a.length;x++){
            resultado+=a[x];
        }
        return resultado;
    }
    private int[]  cifrarNumeros(){
        int[] seed = cadenaToNum(getCadena(getClave()));
        int[] txtclr = cadenaToNum(getCadena(getTexto()));
        int[] cifr = new int[txtclr.length];
        int x=0,y=0;
        for(x=0;x<txtclr.length;x++){
            if(y==seed.length){
                y=0;
                cifr[x]=(txtclr[x]+seed[y])%alfa.length;
            }
            else
                cifr[x]=(txtclr[x]+seed[y])%alfa.length;
            y++;
        }
        return cifr;
    }
    private int[] descifrarNumeros(){
        int[] seed = cadenaToNum(getCadena(getClave()));
        int[] crpgrm = cadenaToNum(getCadena(getTexto()));
        int[] decifr = new int[crpgrm.length];
        int x=0,y=0;
        for(x=0;x<crpgrm.length;x++){
            if(y==seed.length){
                y=0;
                decifr[x]=crpgrm[x]-seed[y];                 if(decifr[x]<0){
                    decifr[x]=alfa.length-(decifr[x]*-1);
                    }
            }
            else{
                decifr[x]=crpgrm[x]-seed[y];
                if(decifr[x]<0){
                    decifr[x]=alfa.length-(decifr[x]*-1);
                    }
            }
            y++;
        }
        return decifr;
    }
    public void cifradoVigenere (JTextArea texto){
texto.setText(mostrarTexto(numToCadena(cifrarNumeros())));
    }
    public void descifradoVigenere (JTextArea texto){
texto.setText(mostrarTexto(numToCadena(descifrarNumeros())));
    }


    //método para descifrar el texto
 
    public static String descifradoCesar(String texto, int codigo) {
        StringBuilder cifrado = new StringBuilder();
        codigo = codigo % 26;
        for (int i = 0; i < texto.length(); i++) {
            if (texto.charAt(i) >= 'a' && texto.charAt(i) <= 'z') {
                if ((texto.charAt(i) - codigo) < 'a') {
                    cifrado.append((char) (texto.charAt(i) - codigo + 26));
                } else {
                    cifrado.append((char) (texto.charAt(i) - codigo));
                }
            } else if (texto.charAt(i) >= 'A' && texto.charAt(i) <= 'Z') {
                if ((texto.charAt(i) - codigo) < 'A') {
                    cifrado.append((char) (texto.charAt(i) - codigo + 26));
                } else {
                    cifrado.append((char) (texto.charAt(i) - codigo));
                }
            }
        }
        return cifrado.toString();
    }
    private void nuevoDocumento(){
    int ancho=25;
        JFrame frame=new JFrame();
       JPanel panel=new JPanel();
      // JLabel desfase=new JLabel("Desplazamiento:",SwingConstants.CENTER);
       JTextArea texto = new JTextArea( );
       JToolBar encriptarBarra = new javax.swing.JToolBar();
       JButton BotonTraducir = new javax.swing.JButton();
       JButton BotonDecodificar = new javax.swing.JButton();
        encriptarBarra.setRollover(true);
        encriptarBarra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BotonTraducir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/traduccion.jpg"))); // NOI18N
        BotonTraducir.setFocusable(false);
        BotonTraducir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonTraducir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        
        BotonDecodificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/decodificar.jpg"))); // NOI18N
        BotonDecodificar.setFocusable(false);
        BotonDecodificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonDecodificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        
        encriptarBarra.add(BotonTraducir);
        encriptarBarra.add(BotonDecodificar);
       //frame.setDefaultCloseOperation(JPanel.DISPOSE_ON_CLOSE);
       frame.setVisible(true);
       frame.getContentPane().add(panel);
       
       panel.setLayout(null);
       frame.setBounds(50,50,400,100);

        frame.setTitle("Texto-Cifrado "+codificacion);

    frame.setVisible(true);
   
       frame.setSize(new Dimension(640,480));
       encriptarBarra.setBounds(0, 0, 350, 35);
       texto.setBounds(0,35,620,435);
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
       panel.add(texto);
       panel.add(encriptarBarra);
        BotonTraducir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if (opcionSeleccionada==1){
                  texto.setText(cifradoCesar(texto.getText(),desp)); 
                }
                else{
                   textoPlano=texto.getText();
                  cifradoVigenere (texto);        
                }

                

            }
        });
        BotonDecodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                 if (opcionSeleccionada==1){
                   texto.setText(descifradoCesar(texto.getText(),desp));   
                 }           
                 else{
                   textoPlano=texto.getText();
                 descifradoVigenere (texto);        
                }

            }
        });
}
    private void ElegirArchivo(){
            JFileChooser jfc= new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CPX","cpx");
    jfc.setFileFilter(filter);
            //setFilter(filter);
        if(jfc.showOpenDialog(JMenu)==JFileChooser.APPROVE_OPTION){
        File fichero =jfc.getSelectedFile();
       
           JFrame frame =new JFrame(fichero.getPath());
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    frame.setVisible(true);
    
       //ImageIcon texto=new JTextArea(fichero.getPath());
       
       JTextArea texto = new JTextArea( );
       frame.add(texto);
        }
}


public void obtenerImagen(){

}
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(criptix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(criptix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(criptix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(criptix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new criptix().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAbrir;
    private javax.swing.JButton BotonGuardar;
    private javax.swing.JButton BotonNuevo;
    private javax.swing.JRadioButtonMenuItem CifradoCesar;
    private javax.swing.JMenuItem JMenu;
    private javax.swing.ButtonGroup MenuGrupo;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JFrame jFrame4;
    private javax.swing.JMenu jMPrincipal;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu12;
    private javax.swing.JMenu jMenu13;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JMenuBar jMenuBar5;
    private javax.swing.JMenu jMenuClasico;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JRadioButtonMenuItem vigenere;
    // End of variables declaration//GEN-END:variables
}
